DROP DATABASE IF EXISTS SMSYS;
CREATE DATABASE IF NOT EXISTS SMSYS;
SHOW DATABASES ;
USE SMSYS;

/*Course table*/
DROP TABLE IF EXISTS Course;
CREATE TABLE IF NOT EXISTS Course(
    CourseID VARCHAR (15),
    Coursename VARCHAR(45),
    CourseType VARCHAR (45),

    CONSTRAINT PRIMARY KEY(CourseID)

    );
SHOW TABLES ;
DESCRIBE Course;


DROP TABLE IF EXISTS GRADES;
CREATE TABLE IF NOT EXISTS GRADES(
    GRADESID VARCHAR (45),
    GRADE VARCHAR (45),
    STATUS VARCHAR (45),
    CONSTRAINT PRIMARY KEY(GRADESID)

    );
SHOW TABLES ;
DESCRIBE GRADES;

/*GRADELEVEL table*/
DROP TABLE IF EXISTS GRADELEVEL;
CREATE TABLE IF NOT EXISTS GRADELEVEL(
    GRADEIDLAVEL VARCHAR (45),
    LEVEL VARCHAR(45),
    STATUS VARCHAR(45),
    CONSTRAINT PRIMARY KEY(GRADEIDLAVEL)

    );
SHOW TABLES ;
DESCRIBE GRADELEVEL;

/*Student table*/
DROP TABLE IF EXISTS Student;
CREATE TABLE IF NOT EXISTS Student(
    StudentID VARCHAR (15),
    StudentName VARCHAR(45),
    Address VARCHAR(45),
    Email VARCHAR(45),
    ContactNo VARCHAR(45),
    City VARCHAR(45),
     CONSTRAINT PRIMARY KEY(StudentID)
    );
SHOW TABLES ;
DESCRIBE Student;

/*Course table*/
DROP TABLE IF EXISTS Course;
CREATE TABLE IF NOT EXISTS Course(
    CourseID VARCHAR (15),
    Coursename VARCHAR(45),
    CourseType VARCHAR (45),

    CONSTRAINT PRIMARY KEY(CourseID)

    );
SHOW TABLES ;
DESCRIBE Course;

/*CourseDetails table*/
DROP TABLE IF EXISTS CourseDetails;
CREATE TABLE IF NOT EXISTS CourseDetails(
    CourseID VARCHAR (15),
    StudentID VARCHAR(15),
   RegDate VARCHAR(45),

    CONSTRAINT PRIMARY KEY(StudentID),
    CONSTRAINT FOREIGN KEY (StudentID) REFERENCES Student(StudentID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (CourseID) REFERENCES Course(CourseID) ON DELETE CASCADE ON UPDATE CASCADE
    );
SHOW TABLES ;
DESCRIBE CourseDetails;


/*BOOKTYPE*/
DROP TABLE IF EXISTS BOOKTYPE;
CREATE TABLE IF NOT EXISTS BOOKTYPE(
    IDBOOKTYPE int not null auto_increment,
    TYPE VARCHAR (45),
    STATUS VARCHAR (45),
    CONSTRAINT PRIMARY KEY(IDBOOKTYPE)

    );

SHOW TABLES ;
DESCRIBE BOOKTYPE;

/*USER table*/
DROP TABLE IF EXISTS USER ;
CREATE TABLE IF NOT EXISTS USER (
    USERID VARCHAR(15),
    Fname VARCHAR (45),
    Lname VARCHAR (45),
    DOB VARCHAR (45),
    NIC VARCHAR (45),
    TP1 VARCHAR (45),
    NO VARCHAR (45),
    STREET VARCHAR(45),
    CITY VARCHAR(45),
    EMAIL VARCHAR (45),
    TYPE VARCHAR (45),
    GEN VARCHAR (45),
    STATUS INT,
    PASSWORD varchar(45),
    CONSTRAINT PRIMARY KEY(USERID)

    );
SHOW TABLES ;
DESCRIBE USER;

/*STUDENTGRADELEVELtable*/
DROP TABLE IF EXISTS STUDENTGRADELEVEL;
CREATE TABLE IF NOT EXISTS STUDENTGRADELEVEL (
    GRADEIDLAVEL VARCHAR(45),
    GRADESID VARCHAR(45),
    USERID VARCHAR(45),
    CONSTRAINT FOREIGN KEY (GRADESID) REFERENCES GRADES(GRADESID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (GRADEIDLAVEL) REFERENCES GRADELEVEL(GRADEIDLAVEL) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (USERID) REFERENCES USER(USERID) ON DELETE CASCADE ON UPDATE CASCADE
    );
SHOW TABLES ;
DESCRIBE  STUDENTGRADELEVEL;



/*TIMETABLE table*/
DROP TABLE IF EXISTS TIMETABLE;
CREATE TABLE IF NOT EXISTS TIMETABLE(
    TIMETABLEID VARCHAR(45),
    STARTTIME VARCHAR(45),
    ENDTIME VARCHAR(45),
    TEACHERNAME VARCHAR(45),
    SUBJECT VARCHAR (45),
    CONSTRAINT PRIMARY KEY(TIMETABLEID)


);
    SHOW TABLES ;
    DESCRIBE TIMETABLE;

/*STUDENTHASBOOK table*/
    DROP TABLE IF EXISTS STUDENTHASBOOK ;
    CREATE TABLE IF NOT EXISTS STUDENTHASBOOK(
    IDSTUDENTHASBOOK  VARCHAR(45),
    DATE VARCHAR (45),
    TIME VARCHAR (45),
    BOOKSIDBOOKS VARCHAR(45) ,
    STUDENT VARCHAR(45),
    LIBBARIAN VARCHAR (45),
    CONSTRAINT PRIMARY KEY(IDSTUDENTHASBOOK),
    CONSTRAINT FOREIGN KEY (BOOKID) REFERENCES BOOK(BOOKID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (STUDENT) REFERENCES USER(USERID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (LIBRARIAN) REFERENCES USER(USERID) ON DELETE CASCADE ON UPDATE CASCADE
    );
    SHOW TABLES ;
    DESCRIBE STUDENTHASBOOK;


/*BOOKS table*/
    DROP TABLE IF EXISTS BOOKS;
    CREATE TABLE IF NOT EXISTS BOOKS(
    IDBOOK VARCHAR(45),
    NAME VARCHAR(45),
    AUTOR VARCHAR(45),
    STATUS VARCHAR(45),
    REGDATE VARCHAR(45),
    BOOKTYPEID int,
    CONSTRAINT PRIMARY KEY (IDBOOK),
    CONSTRAINT FOREIGN KEY (BOOKTYPEID) REFERENCES BOOKTYPE(IDBOOKTYPE) ON DELETE CASCADE ON UPDATE CASCADE

    );
    SHOW TABLES ;
    DESCRIBE `BOOKS`;


/*Exam table*/
DROP TABLE IF EXISTS Exam;
CREATE TABLE IF NOT EXISTS Exam(
    ExamID VARCHAR(45),
    UserID VARCHAR(45),
    Examtime VARCHAR(45),
    Examdate VARCHAR(45),

    CONSTRAINT PRIMARY KEY (ExamID),
    CONSTRAINT FOREIGN KEY (UserID) REFERENCES USER(UserID) ON DELETE CASCADE ON UPDATE CASCADE

    );
SHOW TABLES ;
DESCRIBE `Exam`;












